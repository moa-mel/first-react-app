{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"kNAEMA,EAAc,WACjB,OACC,gCACA,4BACD,oCACA,sCAMGC,EAAY,SAACC,GACf,IAAMC,EACND,EAAME,cAAcC,KAAI,SAACC,EAAKC,GAC1B,OACE,wBAAIC,IAAKD,GACL,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACX,4BACE,4BAAQC,QAAS,kBACnBT,EAAMU,gBAAgBL,KADpB,eAMX,OACH,+BAAQJ,IAeOU,EAXD,SAACX,GAAU,IACVE,EAAkCF,EAAlCE,cAAeQ,EAAmBV,EAAnBU,gBAEtB,OACI,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYR,cAAgBA,EAAeQ,gBAAiBA,M,OCE3DE,E,4MApCVC,aAAe,CACXN,KAAM,GACNC,IAAK,I,EAGZM,MAAQ,EAAKD,a,EAGdE,aAAe,SAACC,GAAU,IAAD,EACCA,EAAMC,OAArBV,EADc,EACdA,KAAMW,EADQ,EACRA,MAEb,EAAKC,SAAL,eACKZ,EAAOW,K,EAIhBE,WAAa,WACT,EAAKpB,MAAMqB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAGd,IAAD,EACaS,KAAKR,MAAlBP,EADA,EACAA,KAAMC,EADN,EACMA,IAEb,OACI,8BACG,2BAAOe,QAAQ,QAAf,QACC,2BAAOC,KAAK,OAAOjB,KAAK,OAAOkB,GAAG,OAAOP,MAAOX,EAAMmB,SAAUJ,KAAKP,eACrE,2BAAOQ,QAAQ,OAAf,OACA,2BAAOC,KAAK,OAAOjB,KAAK,MAAMkB,GAAG,MAAMP,MAAOV,EAAKkB,SAAUJ,KAAKP,eACxE,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,kB,GA/BlCO,aCmCJC,E,4MAhCbd,MAAO,CACLe,WAAY,I,EAIfnB,gBAAkB,SAAAL,GAAS,IAClBwB,EAAc,EAAKf,MAAnBe,WAEP,EAAKV,SAAS,CACZU,WACFA,EAAWC,QAAO,SAACC,EAAWC,GAC5B,OAAOA,IAAM3B,Q,EAKjBgB,aAAe,SAAAU,GACb,EAAKZ,SAAS,CAACU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,uDAGhD,IACAF,EAAeP,KAAKR,MAApBe,WAEL,OACC,yBAAKI,UAAU,aACb,kBAAC,EAAD,CAAO/B,cAAgB2B,EACvBnB,gBAAkBY,KAAKZ,kBACvB,kBAAC,EAAD,CAAMW,aAAcC,KAAKD,oB,GA5BdM,aCEnBO,IAASC,OAAO,kBAAC,EAAD,MACdC,SAASC,eAAe,U","file":"static/js/main.58de6d59.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst TableHeader = () => {\r\n   return(\r\n    <thread>\r\n    <tr>\r\n   <th>Name</th>\r\n   <th>Job</th>\r\n    </tr>\r\n    </thread>\r\n   )\r\n}\r\n \r\nconst TableBody = (props) => {\r\n    const rows = \r\n    props.characterData.map((row, index)=>{\r\n        return(\r\n          <tr key={index}>\r\n              <td>{row.name}</td>\r\n              <td>{row.job}</td>\r\n            <td>\r\n              <button onClick={() =>\r\n            props.removeCharacter(index)} >Delete</button>\r\n            </td>\r\n          </tr>\r\n        )\r\n    })\r\n   return (\r\n<tbody>{rows}</tbody> \r\n   )\r\n}\r\n\r\nconst Table = (props) =>{\r\n        const {characterData, removeCharacter} = props\r\n        \r\n        return(\r\n            <table>\r\n              <TableHeader />  \r\n              <TableBody  characterData= {characterData} removeCharacter={removeCharacter}/>\r\n            </table>\r\n        )\r\n    }\r\n\r\nexport default Table","import React, {Component} from 'react';\r\n//import { render } from '@testing-library/react'\r\n\r\n class Form extends Component{\r\n     initialState = {\r\n         name: '',\r\n         job: '',\r\n     }\r\n\r\n  state = this.initialState\r\n \r\n\r\n handleChange = (event) =>{\r\n     const {name, value} = event.target\r\n\r\n     this.setState({\r\n         [name]: value,\r\n     })\r\n }\r\n\r\n submitForm = () =>{\r\n     this.props.handleSubmit(this.state)\r\n     this.setState(this.initialState)\r\n }\r\n\r\n render(){\r\n  const {name, job} = this.state;\r\n\r\n  return(\r\n      <form>\r\n         <label htmlFor=\"name\" >Name</label>\r\n          <input type=\"text\" name=\"name\" id=\"name\" value={name} onChange={this.handleChange} />\r\n          <label htmlFor=\"job\" >Job</label>\r\n          <input type=\"text\" name=\"job\" id=\"job\" value={job} onChange={this.handleChange} /> \r\n    <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />     \r\n      </form>\r\n  );\r\n }\r\n}\r\n\r\nexport default Form;","import React, {Component} from 'react';\nimport Table from './Table';\nimport Form from './Form';\n//import { render } from '@testing-library/react';\n \n class App extends Component{\n   state ={\n     characters: [],\n    }\n  \n\n  removeCharacter = index =>{\n    const {characters} = this.state;\n\n    this.setState({\n      characters:\n    characters.filter((character, i)=>{\n      return i !== index\n    }),\n    })\n  }\n\n  handleSubmit = character =>{\n    this.setState({characters: [...this.state.characters, character]});\n  }\n\nrender() {\n  const { characters } = this.state;\n\n     return(\n      <div className=\"container\">\n        <Table characterData= {characters} \n        removeCharacter= {this.removeCharacter}/>\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    )\n     }   \n    }\n export default App","import React  from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />,\n  document.getElementById('root'))\n\n//serviceWorker.unregister();\n"],"sourceRoot":""}